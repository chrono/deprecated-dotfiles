servers = (
  #  { address = "irc.stealth.net"; chatnet = "IRCnet"; port = "6668"; },
  { address = "irc.efnet.net"; chatnet = "EFNet"; port = "6667"; },
  { 
    address = "irc.undernet.org";
    chatnet = "Undernet";
    port = "6667";
  },
  { address = "irc.dal.net"; chatnet = "DALnet"; port = "6667"; },
  { 
    address = "irc.freenode.net";
    chatnet = "freenode";
    port = "6667";
  },
  { address = "irc.gnome.org"; chatnet = "GIMPNet"; port = "6667"; },
  { address = "irc.ptlink.net"; chatnet = "PTlink"; port = "6667"; },
  { 
    address = "irc.sorcery.net";
    chatnet = "SorceryNet";
    port = "6667";
  },
  { 
    address = "irc.hashmark.net";
    chatnet = "Hashmark";
    port = "6667";
  },
  { address = "irc.ptnet.org"; chatnet = "PTnet"; port = "6667"; },
  { 
    address = "irc.azzurra.org";
    chatnet = "AzzurraNET";
    port = "6667";
  },
  { address = "silc.pspt.fi"; chatnet = "SILC"; port = "706"; },
  { 
    address = "irc.uni-erlangen.de";
    chatnet = "IRCnet";
    port = "6667";
  },
  {
    address = "irc.de.quakenet.org";
    chatnet = "Quakenet";
    port = "6667";
  },
  {
    address = "irc.eu.freenode.net";
    chatnet = "freenode";
    port = "6667";
  },
  {
    address = "secundus.stunet.tu-freiberg.de";
    port = "6667";
    chatnet = "stunet";
    use_ssl = "no";
    ssl_verify = "no";
  }
);

chatnets = {
  IRCnet = {
    type = "IRC";
    max_kicks = "4";
    max_modes = "3";
    max_msgs = "5";
    max_whois = "4";
    max_query_chans = "5";
  };
  EFNet = {
    type = "IRC";
    max_kicks = "4";
    max_modes = "4";
    max_msgs = "3";
    max_whois = "1";
  };
  Undernet = {
    type = "IRC";
    max_kicks = "4";
    max_modes = "3";
    max_msgs = "3";
    max_whois = "30";
  };
  DALnet = {
    type = "IRC";
    max_kicks = "4";
    max_modes = "6";
    max_msgs = "3";
    max_whois = "30";
  };
  freenode = {
    type = "IRC";
    max_kicks = "4";
    max_modes = "4";
    max_msgs = "1";
    max_whois = "1";
  };
  GIMPNet = {
    type = "IRC";
    max_kicks = "4";
    max_modes = "4";
    max_msgs = "3";
    max_whois = "1";
  };
  PTlink = {
    type = "IRC";
    max_kicks = "1";
    max_modes = "6";
    max_msgs = "30";
    max_whois = "1";
  };
  SorceryNet = {
    type = "IRC";
    max_kicks = "30";
    max_modes = "6";
    max_msgs = "30";
    max_whois = "30";
  };
  Hashmark = {
    type = "IRC";
    max_kicks = "4";
    max_modes = "3";
    max_msgs = "3";
    max_whois = "30";
  };
  PTnet = {
    type = "IRC";
    max_kicks = "30";
    max_modes = "13";
    max_msgs = "10";
    max_whois = "30";
  };
  AzzurraNET = {
    type = "IRC";
    max_kicks = "4";
    max_modes = "6";
    max_msgs = "3";
  };
  stunet = { type = "IRC"; };
  Quakenet = {
    type = "IRC";
    max_kicks = "4";
    max_modes = "4";
    max_msgs = "1";
    max_whois = "1";
  };
  SILC = { type = "SILC"; };
};

channels = (
  { name = "#irssi"; chatnet = "ircnet"; autojoin = "No"; },
  { name = "#irssi"; chatnet = "freenode"; autojoin = "No"; },
  { name = "#stunet"; chatnet = "stunet"; autojoin = "Yes"; },
  { name = "#stunet-support"; chatnet = "stunet"; autojoin = "Yes"; }
);

aliases = {
  J = "join";
  WJOIN = "join -window";
  WQUERY = "query -window";
  LEAVE = "part";
  BYE = "quit";
  EXIT = "quit";
  SIGNOFF = "quit";
  DESCRIBE = "action";
  DATE = "time";
  HOST = "userhost";
  LAST = "lastlog";
  SAY = "msg *";
  WI = "whois";
  WII = "whois $0 $0";
  WW = "whowas";
  W = "who";
  N = "names";
  M = "msg";
  T = "topic";
  C = "clear";
  CL = "clear";
  K = "kick";
  KB = "kickban";
  KN = "knockout";
  BANS = "ban";
  B = "ban";
  MUB = "unban *";
  UB = "unban";
  IG = "ignore";
  UNIG = "unignore";
  SB = "scrollback";
  UMODE = "mode $N";
  WC = "window close";
  WN = "window new hide";
  SV = "say Irssi $J ($V) - http://irssi.org/";
  GOTO = "sb goto";
  CHAT = "dcc chat";
  RUN = "SCRIPT LOAD";
  UPTIME = "eval exec - expr `date +%s` - \\$F | awk '{print \"Irssi uptime: \"int(\\\\\\$1/3600/24)\"d \"int(\\\\\\$1/3600%24)\"h \"int(\\\\\\$1/60%60)\"m \"int(\\\\\\$1%60)\"s\" }'";
  CALC = "exec - if which bc &>/dev/null\\; then echo '$*' | bc | awk '{print \"$*=\"$$1}'\\; else echo bc was not found\\; fi";
  SBAR = "STATUSBAR";
  INVITELIST = "mode $C +I";
  Q = "QUERY";
  lc = "lastlog -clear";
  na = "next_active";
  pa = "prev_active ";
  nr = "say +49 351 41721352";
  tw = "msg -localhost twitter";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb $cumode$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://irssi.org/help/";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "no";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        awaylogcnt = { priority = "1"; };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        chanact = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };
    add = { };
    awl_0 = {
      items = {
        barstart = { priority = "100"; };
        awl_0 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};
settings = {
  core = {
    real_name = "chrono";
    user_name = "chrono";
    nick = "chrono";
    recode_fallback = "UTF-8";
    recode_autodetect_utf8 = "yes";
    recode = "yes";
    recode_out_default_charset = "UTF-8";
    recode_transliterate = "yes";
  };
  "fe-common/core" = {
    theme = "mine";
    use_status_window = "yes";
    autolog = "yes";
    term_charset = "UTF-8";
    autoclose_query = "3600";
  };
  #  "fe-text" = { term_type = "utf-8"; };
  "perl/core/scripts" = {
    trackbar_string = "=";
    nicklist_height = "77";
    nicklist_width = "20";
    lastspoke_channels = "= #stunet";
    repeat_show = "yes";
    screen_away_message = "der screen ist nicht attached also bin ich away";
    awl_display_key = "$Q%K|%n$H$C$S";
    awl_block = "-11";
  };
  "fe-text" = { mirc_blink_fix = "yes"; };
};
logs = { };
keyboard = (
  { key = "^[OP"; id = "key"; data = "F1"; },
  { key = "^[OQ"; id = "key"; data = "F2"; },
  { key = "^[OR"; id = "key"; data = "F3"; },
  { key = "^[OS"; id = "key"; data = "F4"; },
  { key = "^[OT"; id = "key"; data = "F5"; },
  { key = "^[OU"; id = "key"; data = "F6"; },
  { key = "^[OV"; id = "key"; data = "F7"; },
  { key = "^[OW"; id = "key"; data = "F8"; },
  { key = "^[OX"; id = "key"; data = "F9"; },
  { key = "^[OY"; id = "key"; data = "F10"; },
  { key = "^[OZ"; id = "key"; data = "F11"; },
  { key = "^[O["; id = "key"; data = "F12"; },
  { key = "^[[11~"; id = "key"; data = "F1"; },
  { key = "^[[12~"; id = "key"; data = "F2"; },
  { key = "^[[13~"; id = "key"; data = "F3"; },
  { key = "^[[14~"; id = "key"; data = "F4"; },
  { key = "^[[15~"; id = "key"; data = "F5"; },
  { key = "^[[16~"; id = "key"; data = "F6"; },
  { key = "^[[17~"; id = "key"; data = "F6"; },
  { key = "^[[18~"; id = "key"; data = "F7"; },
  { key = "^[[19~"; id = "key"; data = "F8"; },
  { key = "^[[20~"; id = "key"; data = "F9"; },
  { key = "^[[21~"; id = "key"; data = "F10"; },
  { key = "F1"; id = "command"; data = "window 1"; },
  { key = "F2"; id = "command"; data = "window 2"; },
  { key = "F3"; id = "command"; data = "window 3"; },
  { key = "F4"; id = "command"; data = "window 4"; },
  { key = "F5"; id = "command"; data = "window 5"; },
  { key = "F6"; id = "command"; data = "window 6"; },
  { key = "F7"; id = "command"; data = "window 7"; },
  { key = "F8"; id = "command"; data = "window 8"; },
  { key = "F9"; id = "command"; data = "window 9"; },
  { key = "F10"; id = "command"; data = "window 10"; },
  { key = "F11"; id = "command"; data = "window 11"; },
  { key = "F12"; id = "command"; data = "window 12"; },
  { key = "shift-tab"; id = "insert_text"; data = "bla"; }
);
ignores = (
  {
    level = "CRAP MSGS NOTICES SNOTES CTCPS JOINS PARTS QUITS KICKS MODES TOPICS WALLOPS INVITES NICKS DCC DCCMSGS CLIENTNOTICES CLIENTCRAP CLIENTERRORS HILIGHTS";
    channels = ( "#thepiratebay.org" );
  },
  { level = "JOINS PARTS QUITS NICKS"; channels = ( "#stunet" ); }
);
notifies = {  };
windows = {
  10 = { name = "hilight"; sticky = "yes"; };
  1 = { immortal = "yes"; name = "(status)"; level = "ALL"; };
  2 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#stunet";
        tag = "stunet";
      }
    );
  };
  3 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#bitlbee";
        tag = "localhost";
      }
    );
  };
};
hilights = ( );
conversions = {
  "stunet/stunet" = "ISO-8859-15";
  "stunet/quiz.de" = "ISO-8859-15";
};
